{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIMC,EAAOC,SAASC,cAAc,SAChCC,EAAa,EACbC,EAAY,EACZC,EAAS,EACTC,EAAa,EAuBjB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACHN,EACJI,EAAQ,CAACG,SAAUT,EAAUU,MAAOT,IAEnCM,EAAO,CAACE,SAAUT,EAAUU,MAAOT,G,GAErCA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACnBG,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IArCvElB,EAAK2B,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBACF1B,EAAa2B,OAAOF,EAAEG,cAAcC,SAAS,GAAGC,OAChD7B,EAAY0B,OAAOF,EAAEG,cAAcC,SAAS,GAAGC,OAC/C5B,EAASyB,OAAOF,EAAEG,cAAcC,SAAS,GAAGC,OAI1C,IAAK,IAAIC,EAAI,EAAGA,GAAK7B,EAAQ6B,IAC3B3B,EAAc2B,EAAG5B,EAAaH,GAC9BG,GAAcF,EAIlBE,EAAa,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\"\n\n\nconst form = document.querySelector('.form');\nlet firstDelay = 0;\nlet stepDelay = 0;\nlet amount = 0;\nlet totalDelay = 0;\n\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  firstDelay = Number(e.currentTarget.elements[0].value); \n  stepDelay = Number(e.currentTarget.elements[1].value);\n  amount = Number(e.currentTarget.elements[2].value);\n  \n\n    \n    for (let i = 1; i <= amount; i++) {\n      createPromise(i, totalDelay + firstDelay);\n      totalDelay += stepDelay;\n    }\n\n\n  totalDelay = 0;\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n        if (shouldResolve) {\n        resolve({position: position, delay: delay})\n        } else {\n         reject({position: position, delay: delay})\n        }\n    }, delay);\n  })\n\n  promise\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$totalDelay","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","Number","currentTarget","elements","value","i"],"version":3,"file":"03-promises.fa75a459.js.map"}